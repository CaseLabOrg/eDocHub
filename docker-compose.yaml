version: '3.9'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

  minio:
    image: quay.io/minio/minio:RELEASE.2024-10-13T13-34-11Z
    volumes:
      - ./data:/data
    ports:
      - "10000:10000"
      - "10001:10001"
    environment:
      MINIO_ROOT_USER: 'minioadmin'
      MINIO_ROOT_PASSWORD: 'minioadmin'
      MINIO_ADDRESS: ':10000'
      MINIO_CONSOLE_ADDRESS: ':10001'
    command: minio server /data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:10000/minio/health/live || exit 1"]
      interval: 10s
      retries: 5

  elasticsearch:
    image: elasticsearch:8.10.1
    environment:
      discovery.type: "single-node"
      ELASTIC_PASSWORD: "F8x6X_xkjA105DiuWTxC"
      http.port: "10200"
      transport.port: "10300"
      xpack.security.enabled: "false"
      xpack.security.transport.ssl.enabled: "false"
      xpack.security.http.ssl.enabled: "false"
    ports:
      - "10200:10200"
      - "10300:10300"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:10200 || exit 1"]
      interval: 30s
      retries: 10

  zookeeper:
      image: wurstmeister/zookeeper:latest
      ports:
          - "2181:2181"
      environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  app:
    image: ecm
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: https://kafka:10093
      MINIO_URL: http://minio:10000
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_DATA_ELASTICSEARCH_REST_URIS: http://elasticsearch:10200
      elastic.hostname: elasticsearch
      elastic.port: 10200
      elastic.scheme: http
      elastic.username: elastic
      elastic.password: F8x6X_xkjA105DiuWTxC
    entrypoint: [ "sh", "-c", "sleep 60 && java -jar /app/ecm.jar" ]


  app:
    image: ecm
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: https://kafka:10093
      MINIO_URL: http://minio:10000
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_DATA_ELASTICSEARCH_REST_URIS: http://elasticsearch:10200
      elastic.hostname: elasticsearch
      elastic.port: 10200
      elastic.scheme: http
      elastic.username: elastic
      elastic.password: F8x6X_xkjA105DiuWTxC
    entrypoint: ["sh", "-c", "sleep 60 && java -jar /app/ecm.jar"]

volumes:
  es_data:
    driver: local